// <auto-generated />
using GuildManager.Api.Data;
using GuildManager.Data.GameData.Characters.CharactersData;
using GuildManager.Data.GameData.Classes;
using GuildManager.Data.GameData.Items.Types;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GuildManager.Api.Migrations
{
    [DbContext(typeof(GuildManagerContext))]
    [Migration("20171217185348_addedArmor")]
    partial class addedArmor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GuildManager.Data.GameData.Characters.DbEquipedItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ArmId");

                    b.Property<int?>("ChestId");

                    b.Property<int?>("FeetId");

                    b.Property<int?>("HandId");

                    b.Property<int?>("HeadId");

                    b.Property<int?>("LegId");

                    b.Property<int?>("MainHandId");

                    b.Property<int?>("NeckId");

                    b.Property<int?>("OffHandId");

                    b.Property<int?>("RinegOneId");

                    b.Property<int?>("RingTwoId");

                    b.Property<int?>("WaistId");

                    b.HasKey("Id");

                    b.HasIndex("ArmId");

                    b.HasIndex("ChestId");

                    b.HasIndex("FeetId");

                    b.HasIndex("HandId");

                    b.HasIndex("HeadId");

                    b.HasIndex("LegId");

                    b.HasIndex("MainHandId");

                    b.HasIndex("NeckId");

                    b.HasIndex("OffHandId");

                    b.HasIndex("RinegOneId");

                    b.HasIndex("RingTwoId");

                    b.HasIndex("WaistId");

                    b.ToTable("EquippedItems");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Characters.DbInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Gold");

                    b.HasKey("Id");

                    b.ToTable("DbInventory");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Characters.DbMonster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClassId");

                    b.Property<int?>("InventoryId");

                    b.Property<int?>("MonsterBaseResourcesId");

                    b.Property<int>("MonsterType");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("MonsterBaseResourcesId");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Characters.DbPlayerCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClassId");

                    b.Property<int?>("EquipedItemsId");

                    b.Property<int?>("InventoryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("EquipedItemsId");

                    b.HasIndex("InventoryId");

                    b.ToTable("PlayerCharacters");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Classes.DbGameClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BaseResourcesId");

                    b.Property<int?>("BaseStatsId");

                    b.Property<int>("MainStat");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("BaseResourcesId");

                    b.HasIndex("BaseStatsId");

                    b.ToTable("GameClasses");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Classes.GameClassData.BaseResources", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BaseHealth");

                    b.HasKey("Id");

                    b.ToTable("BaseResources");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Classes.GameClassData.BaseStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BaseAgility");

                    b.Property<int>("BaseIntelligence");

                    b.Property<int>("BaseStamina");

                    b.Property<int>("BaseStrength");

                    b.Property<int>("BaseWisdom");

                    b.HasKey("Id");

                    b.ToTable("BaseStats");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Items.DbWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EquipSlotType");

                    b.Property<int>("ItemRarity");

                    b.Property<int>("MaxDamage");

                    b.Property<int>("MinDamage");

                    b.Property<string>("Name");

                    b.Property<int?>("StatsId");

                    b.Property<double>("SwingSpeed");

                    b.Property<int>("WeaponEquipType");

                    b.Property<int>("WeaponType");

                    b.HasKey("Id");

                    b.HasIndex("StatsId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Items.ItemsData.ItemStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Agility");

                    b.Property<int>("Armor");

                    b.Property<double>("CritChance");

                    b.Property<int>("Energy");

                    b.Property<double>("Haste");

                    b.Property<int>("Health");

                    b.Property<int>("Intelligence");

                    b.Property<int>("Stamina");

                    b.Property<int>("Strength");

                    b.Property<int>("Wisdom");

                    b.HasKey("Id");

                    b.ToTable("ItemStats");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Items.Types.DbArmor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArmorType");

                    b.Property<int>("EquipSlotType");

                    b.Property<int>("ItemRarity");

                    b.Property<string>("Name");

                    b.Property<int?>("StatsId");

                    b.HasKey("Id");

                    b.HasIndex("StatsId");

                    b.ToTable("Armor");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Characters.DbEquipedItems", b =>
                {
                    b.HasOne("GuildManager.Data.GameData.Items.Types.DbArmor", "Arm")
                        .WithMany()
                        .HasForeignKey("ArmId");

                    b.HasOne("GuildManager.Data.GameData.Items.Types.DbArmor", "Chest")
                        .WithMany()
                        .HasForeignKey("ChestId");

                    b.HasOne("GuildManager.Data.GameData.Items.Types.DbArmor", "Feet")
                        .WithMany()
                        .HasForeignKey("FeetId");

                    b.HasOne("GuildManager.Data.GameData.Items.Types.DbArmor", "Hand")
                        .WithMany()
                        .HasForeignKey("HandId");

                    b.HasOne("GuildManager.Data.GameData.Items.Types.DbArmor", "Head")
                        .WithMany()
                        .HasForeignKey("HeadId");

                    b.HasOne("GuildManager.Data.GameData.Items.Types.DbArmor", "Leg")
                        .WithMany()
                        .HasForeignKey("LegId");

                    b.HasOne("GuildManager.Data.GameData.Items.DbWeapon", "MainHand")
                        .WithMany()
                        .HasForeignKey("MainHandId");

                    b.HasOne("GuildManager.Data.GameData.Items.Types.DbArmor", "Neck")
                        .WithMany()
                        .HasForeignKey("NeckId");

                    b.HasOne("GuildManager.Data.GameData.Items.DbWeapon", "OffHand")
                        .WithMany()
                        .HasForeignKey("OffHandId");

                    b.HasOne("GuildManager.Data.GameData.Items.Types.DbArmor", "RinegOne")
                        .WithMany()
                        .HasForeignKey("RinegOneId");

                    b.HasOne("GuildManager.Data.GameData.Items.Types.DbArmor", "RingTwo")
                        .WithMany()
                        .HasForeignKey("RingTwoId");

                    b.HasOne("GuildManager.Data.GameData.Items.Types.DbArmor", "Waist")
                        .WithMany()
                        .HasForeignKey("WaistId");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Characters.DbMonster", b =>
                {
                    b.HasOne("GuildManager.Data.GameData.Classes.DbGameClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("GuildManager.Data.GameData.Characters.DbInventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId");

                    b.HasOne("GuildManager.Data.GameData.Classes.GameClassData.BaseResources", "MonsterBaseResources")
                        .WithMany()
                        .HasForeignKey("MonsterBaseResourcesId");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Characters.DbPlayerCharacter", b =>
                {
                    b.HasOne("GuildManager.Data.GameData.Classes.DbGameClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("GuildManager.Data.GameData.Characters.DbEquipedItems", "EquipedItems")
                        .WithMany()
                        .HasForeignKey("EquipedItemsId");

                    b.HasOne("GuildManager.Data.GameData.Characters.DbInventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Classes.DbGameClass", b =>
                {
                    b.HasOne("GuildManager.Data.GameData.Classes.GameClassData.BaseResources", "BaseResources")
                        .WithMany()
                        .HasForeignKey("BaseResourcesId");

                    b.HasOne("GuildManager.Data.GameData.Classes.GameClassData.BaseStats", "BaseStats")
                        .WithMany()
                        .HasForeignKey("BaseStatsId");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Items.DbWeapon", b =>
                {
                    b.HasOne("GuildManager.Data.GameData.Items.ItemsData.ItemStats", "Stats")
                        .WithMany()
                        .HasForeignKey("StatsId");
                });

            modelBuilder.Entity("GuildManager.Data.GameData.Items.Types.DbArmor", b =>
                {
                    b.HasOne("GuildManager.Data.GameData.Items.ItemsData.ItemStats", "Stats")
                        .WithMany()
                        .HasForeignKey("StatsId");
                });
#pragma warning restore 612, 618
        }
    }
}
